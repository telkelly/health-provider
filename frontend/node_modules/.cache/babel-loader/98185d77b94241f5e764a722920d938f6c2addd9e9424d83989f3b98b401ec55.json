{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Determine whether the current browser supports passive event listeners, and\n * if so, use them.\n */\nexport function applyPassive(globalObj) {\n  if (globalObj === void 0) {\n    globalObj = window;\n  }\n  return supportsPassiveOption(globalObj) ? {\n    passive: true\n  } : false;\n}\nfunction supportsPassiveOption(globalObj) {\n  if (globalObj === void 0) {\n    globalObj = window;\n  }\n  // See\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n  var passiveSupported = false;\n  try {\n    var options = {\n      // This function will be called when the browser\n      // attempts to access the passive property.\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    var handler = function () {};\n    globalObj.document.addEventListener('test', handler, options);\n    globalObj.document.removeEventListener('test', handler, options);\n  } catch (err) {\n    passiveSupported = false;\n  }\n  return passiveSupported;\n}","map":{"version":3,"names":["applyPassive","globalObj","window","supportsPassiveOption","passive","passiveSupported","options","handler","document","addEventListener","removeEventListener","err"],"sources":["events.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;AAIA,OAAM,SAAUA,YAAYA,CAACC,SAA0B;EAA1B,IAAAA,SAAA;IAAAA,SAAA,GAAAC,MAA0B;EAAA;EAErD,OAAOC,qBAAqB,CAACF,SAAS,CAAC,GACnC;IAACG,OAAO,EAAE;EAAI,CAA4B,GAC1C,KAAK;AACX;AAEA,SAASD,qBAAqBA,CAACF,SAA0B;EAA1B,IAAAA,SAAA;IAAAA,SAAA,GAAAC,MAA0B;EAAA;EACvD;EACA;EACA,IAAIG,gBAAgB,GAAG,KAAK;EAE5B,IAAI;IACF,IAAMC,OAAO,GAAG;MACd;MACA;MACA,IAAIF,OAAOA,CAAA;QACTC,gBAAgB,GAAG,IAAI;QACvB,OAAO,KAAK;MACd;KACD;IAED,IAAME,OAAO,GAAG,SAAAA,CAAA,GAAO,CAAC;IACxBN,SAAS,CAACO,QAAQ,CAACC,gBAAgB,CAAC,MAAM,EAAEF,OAAO,EAAED,OAAO,CAAC;IAC7DL,SAAS,CAACO,QAAQ,CAACE,mBAAmB,CAClC,MAAM,EAAEH,OAAO,EAAED,OAA+B,CAAC;GACtD,CAAC,OAAOK,GAAG,EAAE;IACZN,gBAAgB,GAAG,KAAK;;EAG1B,OAAOA,gBAAgB;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}