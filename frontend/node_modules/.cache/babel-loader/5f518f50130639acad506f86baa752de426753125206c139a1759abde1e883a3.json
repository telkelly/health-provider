{"ast":null,"code":"var _jsxFileName = \"/Users/kelly/Documents/health-provider/src/components/SymptomsChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SymptomChecker = props => {\n  _s();\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const options = {\n      method: \"POST\",\n      url: \"https://symptom-checker4.p.rapidapi.com/analyze\",\n      params: {\n        symptoms: symptoms\n      },\n      headers: {\n        \"content-type\": \"application/json\",\n        \"X-RapidAPI-Key\": \"3bc4205b95msh053da429b4479cdp13dcd3jsn57e065230884\",\n        \"X-RapidAPI-Host\": \"symptom-checker4.p.rapidapi.com\"\n      },\n      data: {\n        symptoms: symptoms\n      }\n    };\n    try {\n      const userId = localStorage.getItem(\"userId\");\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.request(options);\n      setResult(response.data);\n      if (token && response) {\n        axios.post(`/user/${userId}/history`, {\n          historysymptoms: response.data.potentialCauses\n        }).then(res => {\n          console.log(\"it\", response.data.potentialCauses);\n        });\n        console.log(\"it\", response.data.potentialCauses);\n      }\n      console.log(\"they\", response);\n      // if (token) {\n      //   axios.post(`/user/${userId}/history`).then((res) => {\n      //     setData(res.data[0]);\n      //     console.log(props.userId);\n      //   });\n      // }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Symptom Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your symptoms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: symptoms,\n        onChange: e => setSymptoms(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), result && result.potentialCauses && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Analysis Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: result.potentialCauses.map((cause, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: cause\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), result && result.followupQuestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Follow up Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: result.followupQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SymptomChecker, \"8vPtncmLvwFPgX+ktJy+wGlUunk=\");\n_c = SymptomChecker;\nexport default SymptomChecker;\nvar _c;\n$RefreshReg$(_c, \"SymptomChecker\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SymptomChecker","props","_s","symptoms","setSymptoms","result","setResult","handleSubmit","e","preventDefault","options","method","url","params","headers","data","userId","localStorage","getItem","token","response","request","post","historysymptoms","potentialCauses","then","res","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","map","cause","index","followupQuestions","question","_c","$RefreshReg$"],"sources":["/Users/kelly/Documents/health-provider/src/components/SymptomsChecker.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst SymptomChecker = (props) => {\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [result, setResult] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      url: \"https://symptom-checker4.p.rapidapi.com/analyze\",\n      params: {\n        symptoms: symptoms,\n      },\n      headers: {\n        \"content-type\": \"application/json\",\n        \"X-RapidAPI-Key\": \"3bc4205b95msh053da429b4479cdp13dcd3jsn57e065230884\",\n        \"X-RapidAPI-Host\": \"symptom-checker4.p.rapidapi.com\",\n      },\n      data: {\n        symptoms: symptoms,\n      },\n    };\n\n    try {\n      const userId = localStorage.getItem(\"userId\");\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.request(options);\n      setResult(response.data);\n      if (token && response) {\n        axios.post(`/user/${userId}/history`, {\n          historysymptoms: response.data.potentialCauses\n        }).then((res) => {\n          console.log(\"it\", response.data.potentialCauses);\n        });\n        console.log(\"it\", response.data.potentialCauses);\n      }\n      console.log(\"they\", response);\n      // if (token) {\n      //   axios.post(`/user/${userId}/history`).then((res) => {\n      //     setData(res.data[0]);\n      //     console.log(props.userId);\n      //   });\n      // }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"symptom-div\">\n      <h1>Symptom Checker</h1>\n      <form onSubmit={handleSubmit}>\n        <p>Enter your symptoms:</p>\n        <input\n          type=\"text\"\n          value={symptoms}\n          onChange={(e) => setSymptoms(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {result && result.potentialCauses && (\n        <div>\n          <h2>Analysis Result:</h2>\n          <ul>\n            {result.potentialCauses.map((cause, index) => (\n              <li key={index}>{cause}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {result && result.followupQuestions && (\n        <div>\n          <h2>Follow up Questions:</h2>\n          <ul>\n            {result.followupQuestions.map((question, index) => (\n              <li key={index}>{question}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SymptomChecker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}