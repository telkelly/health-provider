{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { cssClasses } from '../constants';\nimport { MDCTopAppBarFoundation } from '../standard/foundation';\nvar MDCFixedTopAppBarFoundation = /** @class */function (_super) {\n  __extends(MDCFixedTopAppBarFoundation, _super);\n  function MDCFixedTopAppBarFoundation() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * State variable for the previous scroll iteration top app bar state\n     */\n    _this.wasScrolled = false;\n    return _this;\n  }\n  /**\n   * Scroll handler for applying/removing the modifier class on the fixed top app bar.\n   */\n  MDCFixedTopAppBarFoundation.prototype.handleTargetScroll = function () {\n    var currentScroll = this.adapter.getViewportScrollY();\n    if (currentScroll <= 0) {\n      if (this.wasScrolled) {\n        this.adapter.removeClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled = false;\n      }\n    } else {\n      if (!this.wasScrolled) {\n        this.adapter.addClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled = true;\n      }\n    }\n  };\n  return MDCFixedTopAppBarFoundation;\n}(MDCTopAppBarFoundation);\nexport { MDCFixedTopAppBarFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFixedTopAppBarFoundation;","map":{"version":3,"names":["cssClasses","MDCTopAppBarFoundation","MDCFixedTopAppBarFoundation","_super","__extends","_this","apply","arguments","wasScrolled","prototype","handleTargetScroll","currentScroll","adapter","getViewportScrollY","removeClass","FIXED_SCROLLED_CLASS","addClass"],"sources":["foundation.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQA,UAAU,QAAO,cAAc;AACvC,SAAQC,sBAAsB,QAAO,wBAAwB;AAE7D,IAAAC,2BAAA,0BAAAC,MAAA;EAAiDC,SAAA,CAAAF,2BAAA,EAAAC,MAAA;EAAjD,SAAAD,4BAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IACE;;;IAGQF,KAAA,CAAAG,WAAW,GAAG,KAAK;;EAoB7B;EAlBE;;;EAGSN,2BAAA,CAAAO,SAAA,CAAAC,kBAAkB,GAA3B;IACE,IAAMC,aAAa,GAAG,IAAI,CAACC,OAAO,CAACC,kBAAkB,EAAE;IAEvD,IAAIF,aAAa,IAAI,CAAC,EAAE;MACtB,IAAI,IAAI,CAACH,WAAW,EAAE;QACpB,IAAI,CAACI,OAAO,CAACE,WAAW,CAACd,UAAU,CAACe,oBAAoB,CAAC;QACzD,IAAI,CAACP,WAAW,GAAG,KAAK;;KAE3B,MAAM;MACL,IAAI,CAAC,IAAI,CAACA,WAAW,EAAE;QACrB,IAAI,CAACI,OAAO,CAACI,QAAQ,CAAChB,UAAU,CAACe,oBAAoB,CAAC;QACtD,IAAI,CAACP,WAAW,GAAG,IAAI;;;EAG7B,CAAC;EACH,OAAAN,2BAAC;AAAD,CAAC,CAxBgDD,sBAAsB;;AA0BvE;AACA,eAAeC,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}