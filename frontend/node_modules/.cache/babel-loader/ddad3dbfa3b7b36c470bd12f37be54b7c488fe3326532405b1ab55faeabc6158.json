{"ast":null,"code":"var _jsxFileName = \"/Users/kelly/Documents/health-provider/src/components/GoogleMaps.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport GoogleMapReact from \"google-map-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleMap = () => {\n  _s();\n  const [hospitals, setHospitals] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`https://maps.googleapis.com/maps/api/place/textsearch/json?query=HOSPITAL_NAME&key=YOUR_API_KEY`);\n        setHospitals(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"400px\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyCjRBEiBB5qHoY10iZoJ8KA4UH9fvH8V-0\"\n      },\n      defaultCenter: 'Macabi' ? {\n        lat: hospital.geometry.location.lat,\n        lng: hospital.geometry.location.lng\n      } : {\n        lat: 0,\n        lng: 0\n      },\n      defaultZoom: 13,\n      children: hospitals.map(hospital => /*#__PURE__*/_jsxDEV(\"div\", {\n        lat: hospital.geometry.location.lat,\n        lng: hospital.geometry.location.lng,\n        style: {\n          height: \"10px\",\n          width: \"10px\",\n          backgroundColor: \"red\",\n          borderRadius: \"50%\"\n        }\n      }, hospital.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMap, \"33A4jhI45Kxq/uitFcbsnnoCSyI=\");\n_c = GoogleMap;\nexport default GoogleMap;\nvar _c;\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"names":["React","useEffect","useState","axios","GoogleMapReact","jsxDEV","_jsxDEV","GoogleMap","_s","hospitals","setHospitals","fetchData","response","get","data","results","error","console","log","style","height","width","children","bootstrapURLKeys","key","defaultCenter","lat","hospital","geometry","location","lng","defaultZoom","map","backgroundColor","borderRadius","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kelly/Documents/health-provider/src/components/GoogleMaps.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport GoogleMapReact from \"google-map-react\";\n\nconst GoogleMap = () => {\n  const [hospitals, setHospitals] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          `https://maps.googleapis.com/maps/api/place/textsearch/json?query=HOSPITAL_NAME&key=YOUR_API_KEY`\n        );\n        setHospitals(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div style={{ height: \"400px\", width: \"100%\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{\n          key: \"AIzaSyCjRBEiBB5qHoY10iZoJ8KA4UH9fvH8V-0\",\n        }}\n        defaultCenter={\n          'Macabi'\n            ? {\n                lat: hospital.geometry.location.lat,\n                lng: hospital.geometry.location.lng,\n              }\n            : { lat: 0, lng: 0 }\n        }\n        defaultZoom={13}\n      >\n        {hospitals.map((hospital) => (\n          <div\n            key={hospital.id}\n            lat={hospital.geometry.location.lat}\n            lng={hospital.geometry.location.lng}\n            style={{\n              height: \"10px\",\n              width: \"10px\",\n              backgroundColor: \"red\",\n              borderRadius: \"50%\",\n            }}\n          />\n        ))}\n      </GoogleMapReact>\n    </div>\n  );\n};\n\nexport default GoogleMap;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,iGACH,CAAC;QACDH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKa,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC7ChB,OAAA,CAACF,cAAc;MACbmB,gBAAgB,EAAE;QAChBC,GAAG,EAAE;MACP,CAAE;MACFC,aAAa,EACX,QAAQ,GACJ;QACEC,GAAG,EAAEC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAACH,GAAG;QACnCI,GAAG,EAAEH,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAACC;MAClC,CAAC,GACD;QAAEJ,GAAG,EAAE,CAAC;QAAEI,GAAG,EAAE;MAAE,CACtB;MACDC,WAAW,EAAE,EAAG;MAAAT,QAAA,EAEfb,SAAS,CAACuB,GAAG,CAAEL,QAAQ,iBACtBrB,OAAA;QAEEoB,GAAG,EAAEC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAACH,GAAI;QACpCI,GAAG,EAAEH,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAACC,GAAI;QACpCX,KAAK,EAAE;UACLC,MAAM,EAAE,MAAM;UACdC,KAAK,EAAE,MAAM;UACbY,eAAe,EAAE,KAAK;UACtBC,YAAY,EAAE;QAChB;MAAE,GARGP,QAAQ,CAACQ,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASjB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAlDID,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}