{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { numbers } from '../constants';\nimport { MDCTopAppBarBaseFoundation } from '../foundation';\nvar INITIAL_VALUE = 0;\nvar MDCTopAppBarFoundation = /** @class */function (_super) {\n  __extends(MDCTopAppBarFoundation, _super);\n  /* istanbul ignore next: optional argument is not a branch statement */\n  function MDCTopAppBarFoundation(adapter) {\n    var _this = _super.call(this, adapter) || this;\n    /**\n     * Indicates if the top app bar was docked in the previous scroll handler iteration.\n     */\n    _this.wasDocked = true;\n    /**\n     * Indicates if the top app bar is docked in the fully shown position.\n     */\n    _this.isDockedShowing = true;\n    /**\n     * Variable for current scroll position of the top app bar\n     */\n    _this.currentAppBarOffsetTop = 0;\n    /**\n     * Used to prevent the top app bar from being scrolled out of view during resize events\n     */\n    _this.isCurrentlyBeingResized = false;\n    /**\n     * The timeout that's used to throttle the resize events\n     */\n    _this.resizeThrottleId = INITIAL_VALUE;\n    /**\n     * The timeout that's used to debounce toggling the isCurrentlyBeingResized\n     * variable after a resize\n     */\n    _this.resizeDebounceId = INITIAL_VALUE;\n    _this.lastScrollPosition = _this.adapter.getViewportScrollY();\n    _this.topAppBarHeight = _this.adapter.getTopAppBarHeight();\n    return _this;\n  }\n  MDCTopAppBarFoundation.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.adapter.setStyle('top', '');\n  };\n  /**\n   * Scroll handler for the default scroll behavior of the top app bar.\n   */\n  MDCTopAppBarFoundation.prototype.handleTargetScroll = function () {\n    var currentScrollPosition = Math.max(this.adapter.getViewportScrollY(), 0);\n    var diff = currentScrollPosition - this.lastScrollPosition;\n    this.lastScrollPosition = currentScrollPosition;\n    // If the window is being resized the lastScrollPosition needs to be updated\n    // but the current scroll of the top app bar should stay in the same\n    // position.\n    if (!this.isCurrentlyBeingResized) {\n      this.currentAppBarOffsetTop -= diff;\n      if (this.currentAppBarOffsetTop > 0) {\n        this.currentAppBarOffsetTop = 0;\n      } else if (Math.abs(this.currentAppBarOffsetTop) > this.topAppBarHeight) {\n        this.currentAppBarOffsetTop = -this.topAppBarHeight;\n      }\n      this.moveTopAppBar();\n    }\n  };\n  /**\n   * Top app bar resize handler that throttle/debounce functions that execute updates.\n   */\n  MDCTopAppBarFoundation.prototype.handleWindowResize = function () {\n    var _this = this;\n    // Throttle resize events 10 p/s\n    if (!this.resizeThrottleId) {\n      this.resizeThrottleId = setTimeout(function () {\n        _this.resizeThrottleId = INITIAL_VALUE;\n        _this.throttledResizeHandler();\n      }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n    }\n    this.isCurrentlyBeingResized = true;\n    if (this.resizeDebounceId) {\n      clearTimeout(this.resizeDebounceId);\n    }\n    this.resizeDebounceId = setTimeout(function () {\n      _this.handleTargetScroll();\n      _this.isCurrentlyBeingResized = false;\n      _this.resizeDebounceId = INITIAL_VALUE;\n    }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n  };\n  /**\n   * Function to determine if the DOM needs to update.\n   */\n  MDCTopAppBarFoundation.prototype.checkForUpdate = function () {\n    var offscreenBoundaryTop = -this.topAppBarHeight;\n    var hasAnyPixelsOffscreen = this.currentAppBarOffsetTop < 0;\n    var hasAnyPixelsOnscreen = this.currentAppBarOffsetTop > offscreenBoundaryTop;\n    var partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;\n    // If it's partially showing, it can't be docked.\n    if (partiallyShowing) {\n      this.wasDocked = false;\n    } else {\n      // Not previously docked and not partially showing, it's now docked.\n      if (!this.wasDocked) {\n        this.wasDocked = true;\n        return true;\n      } else if (this.isDockedShowing !== hasAnyPixelsOnscreen) {\n        this.isDockedShowing = hasAnyPixelsOnscreen;\n        return true;\n      }\n    }\n    return partiallyShowing;\n  };\n  /**\n   * Function to move the top app bar if needed.\n   */\n  MDCTopAppBarFoundation.prototype.moveTopAppBar = function () {\n    if (this.checkForUpdate()) {\n      // Once the top app bar is fully hidden we use the max potential top app bar height as our offset\n      // so the top app bar doesn't show if the window resizes and the new height > the old height.\n      var offset = this.currentAppBarOffsetTop;\n      if (Math.abs(offset) >= this.topAppBarHeight) {\n        offset = -numbers.MAX_TOP_APP_BAR_HEIGHT;\n      }\n      this.adapter.setStyle('top', offset + 'px');\n    }\n  };\n  /**\n   * Throttled function that updates the top app bar scrolled values if the\n   * top app bar height changes.\n   */\n  MDCTopAppBarFoundation.prototype.throttledResizeHandler = function () {\n    var currentHeight = this.adapter.getTopAppBarHeight();\n    if (this.topAppBarHeight !== currentHeight) {\n      this.wasDocked = false;\n      // Since the top app bar has a different height depending on the screen width, this\n      // will ensure that the top app bar remains in the correct location if\n      // completely hidden and a resize makes the top app bar a different height.\n      this.currentAppBarOffsetTop -= this.topAppBarHeight - currentHeight;\n      this.topAppBarHeight = currentHeight;\n    }\n    this.handleTargetScroll();\n  };\n  return MDCTopAppBarFoundation;\n}(MDCTopAppBarBaseFoundation);\nexport { MDCTopAppBarFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTopAppBarFoundation;","map":{"version":3,"names":["numbers","MDCTopAppBarBaseFoundation","INITIAL_VALUE","MDCTopAppBarFoundation","_super","__extends","adapter","_this","call","wasDocked","isDockedShowing","currentAppBarOffsetTop","isCurrentlyBeingResized","resizeThrottleId","resizeDebounceId","lastScrollPosition","getViewportScrollY","topAppBarHeight","getTopAppBarHeight","prototype","destroy","setStyle","handleTargetScroll","currentScrollPosition","Math","max","diff","abs","moveTopAppBar","handleWindowResize","setTimeout","throttledResizeHandler","DEBOUNCE_THROTTLE_RESIZE_TIME_MS","clearTimeout","checkForUpdate","offscreenBoundaryTop","hasAnyPixelsOffscreen","hasAnyPixelsOnscreen","partiallyShowing","offset","MAX_TOP_APP_BAR_HEIGHT","currentHeight"],"sources":["foundation.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}